# Generated by Django 3.1.5 on 2021-08-25 20:56

import accounts.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has completed the email verification process to allow login.', verbose_name='verified')),
                ('org_is_admin', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, default='user_profile/default.png', null=True, upload_to='user_profile/')),
                ('auth_provider', models.CharField(default='email', max_length=30)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('calendar_url', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('subs_start', models.DateTimeField(default=datetime.datetime.now)),
                ('subs_end', models.DateTimeField(default=accounts.models.subEnd)),
                ('last_login', models.DateTimeField(default=datetime.datetime.now)),
                ('usedVideoCredit', models.IntegerField(default=0)),
                ('totalVideoCredit', models.IntegerField(default=1000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FAQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faqCategory', models.IntegerField(choices=[(0, 'Video Creation'), (1, 'Sales Page Creation'), (2, 'Sharing Campaign'), (3, 'Dashboard & Analytics'), (4, 'General')], default=4)),
                ('description', models.CharField(blank=True, max_length=10000)),
                ('video', models.FileField(upload_to='faqsVideo/')),
                ('videoThumbnail', models.ImageField(blank=True, upload_to='faqsVideo/thumbnail/')),
                ('orderBy', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('subs_start', models.DateTimeField(default=datetime.datetime.now)),
                ('subs_end', models.DateTimeField(default=accounts.models.subEnd)),
                ('subdomain', models.CharField(max_length=50)),
                ('logo', models.ImageField(default='organistion/logo/default.png', upload_to='organistion/logo/')),
                ('fav_icon', models.ImageField(default='organistion/fav/default.ico', upload_to='organistion/fav/')),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=10000)),
                ('problemCategory', models.IntegerField(choices=[(0, 'Video Creation'), (1, 'Sales Page Creation'), (2, 'Sharing Campaign'), (3, 'Dashboard & Analytics'), (4, 'Subscription'), (5, 'Other')], default=3)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='myuser',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.organization'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
